#include <iostream>
#include <Windows.h>
#include <fstream>
#include <string>
#include <list>
#include <stdio.h>
#include <vector>
using namespace std;

void Setup()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
}

int* GetArray();

void PrintArray(int* array);

int GetK();

void Sort(string answer, int* array);

void QuickSort(int* array, int left, int right);

void BubbleSort(int* array);

int* FoldArray(int k, int* firstArray, int* secondArray);

int main()
{
	Setup();
	
	string answer;

	int k = 0;
	int* firstArray;
	int* secondArray;

	k = GetK();

	firstArray = GetArray();

	secondArray = GetArray();
	cout << "Оберіть сортування масиву: \n"
		<< "1.Бульбашкове сортування \n"
		<< "2.Швидке сортування \n"
		<< "\nВвдеіть номер або назву обраного сортування \n";
	cin >> answer;

	Sort(answer, firstArray);

	secondArray = FoldArray(k, firstArray, secondArray);

	cout << "\nОб'єднанний массив:\n";
	PrintArray(secondArray);
}

int* FoldArray(int k, int* firstArray, int* secondArray)
{
	int length1 = _msize(firstArray) / sizeof(firstArray[0]);
	int length2 = _msize(secondArray) / sizeof(secondArray[0]);

	int* temp = new int[length2+ length1]();

	for (int i = 0; i < length2 + length1; i++)
	{
		if (i<k)
		{
			temp[i] = secondArray[i];
		}
		else if (i >= k && i < k + length1)
		{
			temp[i] = firstArray[i-k];
		}
		else
		{
			temp[i] = secondArray[i- length1];
		}
	}

	return temp;
}

void Sort(string answer, int* array)
{
	if (answer == "1" || answer == "Бульбашкове сортування" || answer == "Бульбашкове" )
	{
		BubbleSort(array);
	}
	else if (answer == "2" || answer == "Швидке сортування" || answer == "Швидке")
	{
		int length = _msize(array) / sizeof(array[0]);
		QuickSort(array, 0, length - 1);
	}
	else
	{
		cout << "Потрібно ввести 1 або 2, чи назву сортування. Спробуйте ще раз \n";
		cin >> answer;
		Sort(answer, array);
	}
}

int GetK()
{
	int value = 0;
	cout << "Введіть натуральне число k: \n";
	string answer;
	cin >> answer;

	try
	{
		value = stoi(answer);
	}
	catch (const std::exception&)
	{
		cout << "Ви ввели невірне значення k, спробуйте ще раз.\n";
		return GetK();
	}

	if (value < 0)
	{
		cout << "Ви ввели невірне значення k, спробуйте ще раз.\n";
		return GetK();
	}

	return value;
}

int* GetArray()
{
	int size;
	cout << "Введіть розмір масиву \n";
	cin >> size;
	int i;
	int* array;

	array = new int[size];
	for (i = 0; i < size; i++)
	{
		cout << "\nВведіть елемент з індексом " << "[" << i << "]  ";
		cin >> array[i];
	}


	cout << "\nВаша масив:\n";
	PrintArray(array);
	return array;
}

void QuickSort(int* array, int left, int right)
{
	int newLeft = left, newRight = right;
	int piv = array[(newLeft + newRight) / 2];
	while (newLeft <= newRight)
	{
		while (array[newLeft] < piv)
			newLeft++;
		while (array[newRight] > piv)
			newRight--;
		if (newLeft <= newRight)
			swap(array[newLeft++], array[newRight--]);
	}
	if (left < newRight)
		QuickSort(array, left, newRight);
	if (right > newLeft)
		QuickSort(array, newLeft, right);
}

void BubbleSort(int* array)
{
	int length = _msize(array) / sizeof(array[0]);

	for (int i = 0; i < length; i++)
	{
		for (int j = 0; j < length - 1 - i; j++)
		{ 
			if (array[j] > array[j+1])
			{
				swap(array[j], array[j + 1]);
			}
		}
	}
	cout << "\nМасив після сортування:\n";
	PrintArray(array);
}

void PrintArray(int* array)
{
	int i;
	int length = _msize(array) / sizeof(array[0]);

	for (i = 0; i < length; i++)
	{
		cout << array[i] << '\n';
	}
}
